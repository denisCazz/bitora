---
---

<form id="contact-form" class="space-y-6">
  <div class="grid md:grid-cols-2 gap-6">
    <div>
      <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Nome e Cognome</label>
      <input type="text" id="name" name="name" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition-colors" required />
    </div>
    
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
      <input type="email" id="email" name="email" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition-colors" required />
    </div>
  </div>
  
  <div>
    <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Messaggio</label>
    <textarea id="message" name="message" rows="5" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition-colors" required></textarea>
  </div>
  
  <button type="submit" class="px-6 py-3 bg-blue-600 rounded-lg font-medium shadow-lg shadow-primary-500/20 hover:bg-blue-200 transition-colors">
    Invia Messaggio
  </button>
</form>

<!-- Popup con sfondo sfocato -->
<div id="popup" class="hidden fixed inset-0 flex items-center justify-center bg-white/10 backdrop-blur-md">
  <div class="bg-white p-6 rounded-lg shadow-lg">
    <p id="popup-message" class="text-lg font-semibold text-gray-800"></p>
    <button id="close-popup-btn" class="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg">OK</button>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const params = new URLSearchParams(window.location.search);
    const plan = params.get("plan");
    const welcomeText = "Ciao! Sono interessato al piano ";
    if (plan) {
      const planElement = document.getElementById("message");
      if (planElement && planElement instanceof HTMLTextAreaElement) {
        let prepopulatedText = decodeURIComponent(plan);
        planElement.value = welcomeText + " '" + prepopulatedText + "'";
      }
    }
  });

  declare global {
    interface Window {
      showPopup: (message: string) => void;
      closePopup: () => void;
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    const popup = document.getElementById("popup");
    const closeBtn = document.getElementById("close-popup-btn");
    const form = document.getElementById("contact-form") as HTMLFormElement;

    function showPopup(message: string) {
      const messagePopup = document.getElementById("popup-message");
      if (messagePopup) {
        messagePopup.innerText = message;
      }
      if (popup) {
        popup.classList.add("show");
      }
    }

    function closePopup() {
      if (popup) {
        popup.classList.remove("show");
      }
    }

    if (closeBtn) closeBtn.addEventListener("click", closePopup);

    // Rende disponibili le funzioni globalmente
    window.showPopup = showPopup;
    window.closePopup = closePopup;

    if (form) {
      form.addEventListener("submit", async function (event) {
        event.preventDefault(); // Evita il refresh della pagina

        const formData = new FormData(form);

        try {
          const response = await fetch(form.action, {
            method: "POST",
            body: formData,
            headers: { Accept: "application/json" },
          });

          if (response.ok) {
            window.showPopup("Messaggio inviato con successo!");
            form.reset(); // Pulisce il form dopo l'invio
          } else {
            window.showPopup("Errore nell'invio del messaggio. Riprova.");
          }
        } catch (error) {
          window.showPopup("Errore di connessione. Controlla la tua rete e riprova.");
        }
      });
    }
  });


</script>
